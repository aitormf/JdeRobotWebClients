// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `SSLInfo.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(global, r)
{
    var require = typeof(r) === "function" ? r : function(){};
    require("Ice/Struct");
    require("Ice/Long");
    require("Ice/HashMap");
    require("Ice/HashUtil");
    require("Ice/ArrayUtil");
    require("Ice/StreamHelpers");
    
    var Ice = global.Ice || {};
    require("Ice/BuiltinSequences");
    var Glacier2 = global.Glacier2 ||  {};

    /**
     * Information taken from an SSL connection used for permissions
     * verification.
     * 
     * @see PermissionsVerifier
     * 
     **/
    Glacier2.SSLInfo = Slice.defineStruct(
        function(remoteHost, remotePort, localHost, localPort, cipher, certs)
        {
            this.remoteHost = remoteHost !== undefined ? remoteHost : null;
            this.remotePort = remotePort !== undefined ? remotePort : 0;
            this.localHost = localHost !== undefined ? localHost : null;
            this.localPort = localPort !== undefined ? localPort : 0;
            this.cipher = cipher !== undefined ? cipher : null;
            this.certs = certs !== undefined ? certs : null;
        },
        true,
        function(__os)
        {
            __os.writeString(this.remoteHost);
            __os.writeInt(this.remotePort);
            __os.writeString(this.localHost);
            __os.writeInt(this.localPort);
            __os.writeString(this.cipher);
            Ice.StringSeqHelper.write(__os, this.certs);
        },
        function(__is)
        {
            this.remoteHost = __is.readString();
            this.remotePort = __is.readInt();
            this.localHost = __is.readString();
            this.localPort = __is.readInt();
            this.cipher = __is.readString();
            this.certs = Ice.StringSeqHelper.read(__is);
        },
        12, 
        false);
    global.Glacier2 = Glacier2;
}
(typeof (global) === "undefined" ? window : global, typeof (require) === "undefined" ? undefined : require));
