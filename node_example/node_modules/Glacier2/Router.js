// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Router.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(global, r)
{
    var require = typeof(r) === "function" ? r : function(){};
    require("Ice/Object");
    require("Ice/ObjectPrx");
    require("Ice/Operation");
    require("Ice/Exception");
    require("Ice/Long");
    require("Ice/HashMap");
    require("Ice/HashUtil");
    require("Ice/ArrayUtil");
    require("Ice/StreamHelpers");
    
    var Ice = global.Ice || {};
    require("Ice/Router");
    require("Glacier2/Session");
    
    var Glacier2 = global.Glacier2 || {};
    require("Glacier2/PermissionsVerifier");

    /**
     * This exception is raised if a client tries to destroy a session
     * with a router, but no session exists for the client.
     * 
     * @see Router#destroySession
     * 
     **/
    Glacier2.SessionNotExistException = Slice.defineUserException(
        function(_cause)
        {
            Ice.UserException.call(this, _cause);
        },
        Ice.UserException,
        "Glacier2::SessionNotExistException",
        undefined, undefined,
        false,
        false);

    /**
     * The Glacier2 specialization of the {@link Ice.Router}
     * interface.
     * 
     **/
    Glacier2.Router = Slice.defineObject(
        undefined,
        Ice.Object,
        [
            Ice.Router
        ], 0,
        [
            "::Glacier2::Router",
            "::Ice::Object",
            "::Ice::Router"
        ],
        -1, undefined, undefined, false);

    Glacier2.RouterPrx = Slice.defineProxy(Ice.ObjectPrx, Glacier2.Router.ice_staticId, [
        Ice.RouterPrx]);

    Slice.defineOperations(Glacier2.Router, Glacier2.RouterPrx,
    {
        "getCategoryForClient": [, 2, 1, , , [7], , , , , ],
        "createSession": [, , , 1, 2, ["Glacier2.SessionPrx"], [[7], [7]], , 
        [
            Glacier2.CannotCreateSessionException,
            Glacier2.PermissionDeniedException
        ], , ],
        "createSessionFromSecureConnection": [, , , 1, 2, ["Glacier2.SessionPrx"], , , 
        [
            Glacier2.CannotCreateSessionException,
            Glacier2.PermissionDeniedException
        ], , ],
        "refreshSession": [, , , , , , , , 
        [
            Glacier2.SessionNotExistException
        ], , ],
        "destroySession": [, , , , , , , , 
        [
            Glacier2.SessionNotExistException
        ], , ],
        "getSessionTimeout": [, 2, 1, , , [4], , , , , ]
    });
    global.Glacier2 = Glacier2;
}
(typeof (global) === "undefined" ? window : global, typeof (require) === "undefined" ? undefined : require));
