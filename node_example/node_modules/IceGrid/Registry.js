// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Registry.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(global, r)
{
    var require = typeof(r) === "function" ? r : function(){};
    require("Ice/Object");
    require("Ice/ObjectPrx");
    require("Ice/Operation");
    require("Ice/Long");
    require("Ice/HashMap");
    require("Ice/HashUtil");
    require("Ice/ArrayUtil");
    require("Ice/StreamHelpers");
    
    var Ice = global.Ice || {};
    require("IceGrid/Exception");
    
    var IceGrid = global.IceGrid || {};
    require("IceGrid/Session");
    require("IceGrid/Admin");

    /**
     * The IceGrid registry allows clients create sessions
     * directly with the registry.
     * 
     * @see Session
     * @see AdminSession
     * 
     **/
    IceGrid.Registry = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::IceGrid::Registry"
        ],
        -1, undefined, undefined, false);

    IceGrid.RegistryPrx = Slice.defineProxy(Ice.ObjectPrx, IceGrid.Registry.ice_staticId, undefined);

    Slice.defineOperations(IceGrid.Registry, IceGrid.RegistryPrx,
    {
        "createSession": [, , , , , ["IceGrid.SessionPrx"], [[7], [7]], , 
        [
            IceGrid.PermissionDeniedException
        ], , ],
        "createAdminSession": [, , , , , ["IceGrid.AdminSessionPrx"], [[7], [7]], , 
        [
            IceGrid.PermissionDeniedException
        ], , ],
        "createSessionFromSecureConnection": [, , , , , ["IceGrid.SessionPrx"], , , 
        [
            IceGrid.PermissionDeniedException
        ], , ],
        "createAdminSessionFromSecureConnection": [, , , , , ["IceGrid.AdminSessionPrx"], , , 
        [
            IceGrid.PermissionDeniedException
        ], , ],
        "getSessionTimeout": [, 2, 1, , , [3], , , , , ]
    });
    global.IceGrid = IceGrid;
}
(typeof (global) === "undefined" ? window : global, typeof (require) === "undefined" ? undefined : require));
