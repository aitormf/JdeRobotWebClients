// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Identity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(global, r)
{
    var require = typeof(r) === "function" ? r : function(){};
    require("Ice/Object");
    require("Ice/Struct");
    require("Ice/Long");
    require("Ice/HashMap");
    require("Ice/HashUtil");
    require("Ice/ArrayUtil");
    require("Ice/StreamHelpers");
    
    var Ice = global.Ice || {};

    /**
     * The identity of an Ice object. In a proxy, an empty {@link Identity#name} denotes a nil
     * proxy. An identity with an empty {@link Identity#name} and a non-empty {@link Identity#category}
     * is illegal. You cannot add a servant with an empty name to the Active Servant Map.
     * 
     * @see ServantLocator
     * @see ObjectAdapter#addServantLocator
     * 
     **/
    Ice.Identity = Slice.defineStruct(
        function(name, category)
        {
            this.name = name !== undefined ? name : null;
            this.category = category !== undefined ? category : null;
        },
        true,
        function(__os)
        {
            __os.writeString(this.name);
            __os.writeString(this.category);
        },
        function(__is)
        {
            this.name = __is.readString();
            this.category = __is.readString();
        },
        2, 
        false);
    Slice.defineDictionary(Ice, "ObjectDict", "ObjectDictHelper", "Ice.Identity", "Ice.ObjectHelper", false, true, "Ice.Object");
    Slice.defineSequence(Ice, "IdentitySeqHelper", "Ice.Identity", false);
    global.Ice = Ice;
}
(typeof (global) === "undefined" ? window : global, typeof (require) === "undefined" ? undefined : require));
