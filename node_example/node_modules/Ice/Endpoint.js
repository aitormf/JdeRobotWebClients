// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Endpoint.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(global, r)
{
    var require = typeof(r) === "function" ? r : function(){};
    require("Ice/Object");
    require("Ice/ObjectPrx");
    require("Ice/Long");
    require("Ice/HashMap");
    require("Ice/HashUtil");
    require("Ice/ArrayUtil");
    require("Ice/StreamHelpers");
    
    var Ice = global.Ice || {};
    require("Ice/Version");
    require("Ice/BuiltinSequences");
    require("Ice/EndpointF");

    Object.defineProperty(Ice, 'TCPEndpointType', {
        value: 1
    });

    Object.defineProperty(Ice, 'UDPEndpointType', {
        value: 3
    });

    /**
     * Base class providing access to the endpoint details.
     * 
     **/
    Ice.EndpointInfo = Slice.defineLocalObject(
        function(timeout, compress)
        {
            this.timeout = timeout !== undefined ? timeout : 0;
            this.compress = compress !== undefined ? compress : false;
        });

    /**
     * The user-level interface to an endpoint.
     * 
     **/
    Ice.Endpoint = Slice.defineLocalObject();

    /**
     * Provides access to the address details of a IP endpoint.
     * 
     * @see Endpoint
     * 
     **/
    Ice.IPEndpointInfo = Slice.defineLocalObject(
        function(timeout, compress, host, port)
        {
            Ice.EndpointInfo.call(this, timeout, compress);
            this.host = host !== undefined ? host : null;
            this.port = port !== undefined ? port : 0;
        },
        Ice.EndpointInfo);

    /**
     * Provides access to a TCP endpoint information.
     * 
     * @see Endpoint
     * 
     **/
    Ice.TCPEndpointInfo = Slice.defineLocalObject(
        function(timeout, compress, host, port)
        {
            Ice.IPEndpointInfo.call(this, timeout, compress, host, port);
        },
        Ice.IPEndpointInfo);

    /**
     * Provides access to an UDP endpoint information.
     * 
     * @see Endpoint
     * 
     **/
    Ice.UDPEndpointInfo = Slice.defineLocalObject(
        function(timeout, compress, host, port, mcastInterface, mcastTtl)
        {
            Ice.IPEndpointInfo.call(this, timeout, compress, host, port);
            this.mcastInterface = mcastInterface !== undefined ? mcastInterface : null;
            this.mcastTtl = mcastTtl !== undefined ? mcastTtl : 0;
        },
        Ice.IPEndpointInfo);

    /**
     * Provides access to the details of an opaque endpoint.
     * 
     * @see Endpoint
     * 
     **/
    Ice.OpaqueEndpointInfo = Slice.defineLocalObject(
        function(timeout, compress, rawEncoding, rawBytes)
        {
            Ice.EndpointInfo.call(this, timeout, compress);
            this.rawEncoding = rawEncoding !== undefined ? rawEncoding : null;
            this.rawBytes = rawBytes !== undefined ? rawBytes : null;
        },
        Ice.EndpointInfo);
    global.Ice = Ice;
}
(typeof (global) === "undefined" ? window : global, typeof (require) === "undefined" ? undefined : require));
