// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Metrics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(global, r)
{
    var require = typeof(r) === "function" ? r : function(){};
    require("Ice/Object");
    require("Ice/ObjectPrx");
    require("Ice/Long");
    require("Ice/HashMap");
    require("Ice/HashUtil");
    require("Ice/ArrayUtil");
    require("Ice/StreamHelpers");
    
    var Ice = global.Ice || {};
    require("Ice/Metrics");
    
    var IceMX = global.IceMX || {};

    /**
     * Provides information on IceStorm topics.
     * 
     **/
    IceMX.TopicMetrics = Slice.defineObject(
        function(id, total, current, totalLifetime, failures, published, forwarded)
        {
            IceMX.Metrics.call(this, id, total, current, totalLifetime, failures);
            this.published = published !== undefined ? published : new Ice.Long(0, 0);
            this.forwarded = forwarded !== undefined ? forwarded : new Ice.Long(0, 0);
        },
        IceMX.Metrics, undefined, 2,
        [
            "::Ice::Object",
            "::IceMX::Metrics",
            "::IceMX::TopicMetrics"
        ],
        -1,
        function(__os)
        {
            __os.writeLong(this.published);
            __os.writeLong(this.forwarded);
        },
        function(__is)
        {
            this.published = __is.readLong();
            this.forwarded = __is.readLong();
        },
        false);

    IceMX.TopicMetricsPrx = Slice.defineProxy(IceMX.MetricsPrx, IceMX.TopicMetrics.ice_staticId, undefined);

    Slice.defineOperations(IceMX.TopicMetrics, IceMX.TopicMetricsPrx);

    /**
     * Provides information on IceStorm subscribers.
     * 
     **/
    IceMX.SubscriberMetrics = Slice.defineObject(
        function(id, total, current, totalLifetime, failures, queued, outstanding, delivered)
        {
            IceMX.Metrics.call(this, id, total, current, totalLifetime, failures);
            this.queued = queued !== undefined ? queued : 0;
            this.outstanding = outstanding !== undefined ? outstanding : 0;
            this.delivered = delivered !== undefined ? delivered : new Ice.Long(0, 0);
        },
        IceMX.Metrics, undefined, 2,
        [
            "::Ice::Object",
            "::IceMX::Metrics",
            "::IceMX::SubscriberMetrics"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.queued);
            __os.writeInt(this.outstanding);
            __os.writeLong(this.delivered);
        },
        function(__is)
        {
            this.queued = __is.readInt();
            this.outstanding = __is.readInt();
            this.delivered = __is.readLong();
        },
        false);

    IceMX.SubscriberMetricsPrx = Slice.defineProxy(IceMX.MetricsPrx, IceMX.SubscriberMetrics.ice_staticId, undefined);

    Slice.defineOperations(IceMX.SubscriberMetrics, IceMX.SubscriberMetricsPrx);
    global.IceMX = IceMX;
}
(typeof (global) === "undefined" ? window : global, typeof (require) === "undefined" ? undefined : require));
